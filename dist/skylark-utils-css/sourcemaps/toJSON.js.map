{"version":3,"sources":["toJSON.js"],"names":["define","langx","css","Parser","toJSON","order","parser","starHack","ieFilters","strict","sheet","Parsing","addListener","begin","end","event","beginBlock","name","values","charset","endBlock","key","prefix","uri","selectors","i","len","keys","length","selector","text","log","id","pseudo","margin","media","prop","property","value","important","parse","document","getElementById","result","klass","init","options","this","_ordered","ordered","stack","_stack","push","_result","error","Error","rule","_orderd","pop","top","isArray","obj"],"mappings":"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","file":"../toJSON.js","sourcesContent":["define([\r\n    \"skylark-langx/langx\",\r\n    \"./css\",\r\n    \"./Parser\"\r\n], function(langx, css, Parser) {\r\n\r\n\tvar Parsing = langx.klass({\r\n\t\t\"init\" : function(options) {\r\n\r\n\t\t\tthis._ordered = (options && options.ordered) || false;\r\n\t\t},\r\n\r\n\t\t\"begin\" : function() {\r\n\t\t\tvar ordered = this._ordered,\r\n\t\t\t\tstack = this._stack = [];\r\n\t\t\tif (ordered) {\r\n\t\t\t\tstack.push([]);\r\n\t\t\t} else {\r\n\t\t\t\tstack.push({});\r\n\t\t\t}\r\n\r\n\t\t\tthis._result = null;\r\n\r\n\t\t},\r\n\r\n\t\t\"end\" : function(error) {\r\n\t    \tvar stack = this._stack;\r\n\t    \tthis._stack = null;\r\n\r\n\t    \tif (error || stack.length !== 1) {\r\n\t    \t\tthrow new Error(\"parse error\");\r\n\t    \t} else {\r\n\t\t\t\tthis._result =  stack[0];\r\n\t    \t}\r\n\r\n\r\n\t    \treturn this._result;\r\n\t\t},\r\n\r\n\t\t\"beginBlock\" : function(rule) {\r\n\t    \tthis._stack.push(rule);\r\n\t\t},\r\n\r\n\t\t\"endBlock\" : function(order) {\r\n\t    \tvar ordered = order && this._orderd,\r\n\t    \t\tstack = this._stack,\r\n\t    \t\trule = stack.pop(),\r\n\t    \t\ttop = stack[stack.length-1],\r\n                values = top.values || top;\r\n\t    \tif (langx.isArray(values)){\r\n\t    \t\tvar obj = {};\r\n\t    \t\tobj[rule.name] = rule.values;\r\n\t    \t\tvalues.push(obj);\r\n\t    \t} else {\r\n\t    \t\tvalues[rule.name] = rule.values;\r\n\t    \t}\r\n\t\t},\r\n\r\n\t\t\"prop\" : function(name,value,important) {\r\n\t\t\tif (important) {\r\n\t\t\t\tvalue = value + \" !important\";\r\n\t\t\t}\r\n\t    \tvar stack = this._stack,\r\n\t    \t\ttop = stack[stack.length-1];\r\n    \t\ttop.values[name] = value;\r\n\t\t},\r\n\r\n\t\t\"result\" : function() {\r\n\t\t\treturn this._result;\r\n\t\t}\r\n\r\n\t});\r\n\r\n\r\n\tfunction toJSON(css,order) {\r\n\t\t\r\n\t    var parser = new Parser({ \r\n\t    \t\t\t\t\tstarHack: false,\r\n\t                        ieFilters: false,\r\n\t                        strict: false\r\n\t                     }),\r\n\t   \t    sheet = new Parsing(order);\r\n  \r\n\t    parser.addListener(\"startstylesheet\", function(){\r\n\t    \tsheet.begin();\r\n\t    });\r\n\t    \r\n\t    parser.addListener(\"endstylesheet\", function(){\r\n\t    \tsheet.end();\r\n\t    });\r\n\t    \r\n\t    parser.addListener(\"charset\", function(event){\r\n\t\t\tsheet.beginBlock({\r\n\t    \t\tname : \"@charset\",\r\n\t    \t\tvalues :event.charset\r\n\t    \t});\r\n\t    \tsheet.endBlock();\r\n\t    });\r\n\t    \r\n\t    parser.addListener(\"namespace\", function(event){\r\n\t    \tvar key = \"@Namespace\";\r\n\t    \tif (event.prefix) {\r\n\t    \t\tkey = key + \" \" + event.prefix;\r\n\t    \t}\r\n\t    \tsheet.beginBlock({\r\n\t    \t\tname : key,\r\n\t    \t\tvalues : \"\\\"\" + event.uri + \"\\\"\"\r\n\t    \t});\r\n\t    \tsheet.endBlock();\r\n\t    });\r\n\t    \r\n\t    parser.addListener(\"startfontface\", function(event){\r\n\t    });\r\n\t    \r\n\t    parser.addListener(\"endfontface\", function(event){\r\n\t    });\r\n\t    \r\n\t    parser.addListener(\"startkeyframes\", function(event){\r\n\t    \tsheet.beginBlock({\r\n\t    \t\tname : \"@keyframes \" + event.name,\r\n\t    \t\tvalues :{}\r\n\t    \t});\r\n\t    });\r\n\t    \r\n\t    parser.addListener(\"startkeyframerule\", function(event){\r\n\t\t\tvar selectors = \"\";\t        \r\n\t        for (var i=0,len=event.keys.length; i < len; i++){\r\n\t        \tvar selector = event.keys[i].text;\r\n\t        \tif (selectors) {\r\n\t        \t\tselectors = selectors + \",\" + selector\r\n\t        \t} else {\r\n\t        \t\tselectors = selector;\r\n\t        \t}\r\n\t        }\r\n\t    \tsheet.beginBlock({\r\n\t    \t\tname : selectors,\r\n\t    \t\tvalues :{}\r\n\t    \t});\r\n\t    });\r\n\t    \r\n\t    parser.addListener(\"endkeyframerule\", function(event){\r\n\t    \tsheet.endBlock(false);\r\n\t    });    \r\n\t    \r\n\t    parser.addListener(\"endkeyframes\", function(event){\r\n\t    \tsheet.endBlock(false);\r\n\t    });\r\n\t    \r\n\t    parser.addListener(\"startpage\", function(event){\r\n\t        log(\"Starting page with ID=\" + event.id + \" and pseudo=\" + event.pseudo);\r\n            var key = \"@page\";\r\n            if (event.pseudo) {\r\n                key = key + \" \" + event.pseudo;\r\n            }\r\n            sheet.beginBlock({\r\n                name : key,\r\n                values :{}\r\n            });\r\n\t    });\r\n\t    \r\n\t    \r\n\t    parser.addListener(\"endpage\", function(event){\r\n\t        log(\"Ending page with ID=\" + event.id + \" and pseudo=\" + event.pseudo);\r\n            sheet.endBlock(false);\r\n\t    });\r\n\r\n\t    parser.addListener(\"startpagemargin\", function(event){\r\n\t        log(\"Starting page margin \" + event.margin);\r\n            sheet.beginBlock({\r\n                name : \"@page-margin\",\r\n                values :{}\r\n            });\r\n\t    });\r\n\t    \r\n\t    \r\n\t    parser.addListener(\"endpagemargin\", function(event){\r\n\t        log(\"Ending page margin \" + event.margin);\r\n            sheet.endBlock(false);\r\n\t    });\r\n\r\n        parser.addListener(\"starttopcenter\", function(event){\r\n            //log(\"Starting top center \" + event.center);\r\n            sheet.beginBlock({\r\n                name : \"@top-center\",\r\n                values :{}\r\n            });\r\n        });\r\n        \r\n        \r\n        parser.addListener(\"endtopcenter\", function(event){\r\n            //log(\"Ending Top Center \" + event.center);\r\n            sheet.endBlock(false);\r\n        });\r\n\t    \r\n\t    parser.addListener(\"import\", function(event){\r\n\t        log(\"Importing \" + event.uri + \" for media types [\" + event.media + \"]\");\r\n            var key = \"@import \" + event.uri;\r\n            if (event.media) {\r\n                key = key + \" \" + event.media;\r\n            }\r\n            sheet.beginBlock({\r\n                name : key,\r\n                values : \"\"\r\n            });\r\n            sheet.endBlock(true);\r\n\t    });\r\n\t    \r\n\t    parser.addListener(\"startrule\", function(event){\r\n\t\t\tvar selectors = \"\";\t        \r\n\t        for (var i=0,len=event.selectors.length; i < len; i++){\r\n\t            var selector = event.selectors[i];\r\n\t            \r\n\t            if (selectors) {\r\n\t            \tselectors = selectors + \",\" + selector.text;\r\n\t            } else {\r\n\t            \tselectors = selector.text;\r\n\t            }\r\n\t        }\r\n\r\n\t    \tsheet.beginBlock({\r\n\t    \t\tname : selectors,\r\n\t    \t\tvalues :{}\r\n\t    \t});\r\n\t    });\r\n\t    \r\n\t    parser.addListener(\"endrule\", function(event){\r\n\t    \tsheet.endBlock(true);\r\n\t    });\r\n\t    \r\n\t    parser.addListener(\"property\", function(event){\r\n\r\n\t        sheet.prop(event.property.text,event.value.text,event.important);\r\n\t    });\r\n\t    \r\n\t    parser.addListener(\"startmedia\", function(event){\r\n\t    \tsheet.beginBlock({\r\n\t    \t\tname : \"@media \" + event.media,\r\n\t    \t\tvalues :{}\r\n\t    \t});\r\n\r\n\t    });\r\n\t    \r\n\t    parser.addListener(\"endmedia\", function(event){\r\n\t    \tsheet.endBlock(true);\r\n\t    });    \r\n\r\n\r\n\t    parser.addListener(\"error\", function(event){\r\n\t    \tsheet.end(false);\r\n\t    });\r\n\r\n        parser.parse(document.getElementById(\"input\").value);\r\n\r\n\t    return sheet.result();\r\n\r\n\t}\r\n\r\n\treturn css.toJSON = toJSON;\r\n});"]}